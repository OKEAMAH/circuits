import {describe} from "mocha";

const path = require("path");
const wasm_tester = require("circom_tester").wasm;

// inputs MUST be generated by GO-CIRCUITS library https://github.com/iden3/go-circuits (using corresponding test)
describe("sybilTestMTP.circom:", async function() {

    const tests = [
        {"desc":"Sybil resistance - Happy flow - MTP","inputs":{"issuerClaim":["3583233690122716044519380227940806650830","19104853439462320209059061537253618984153217267677512271018416655565783041","10","0","30803922965249841627828060161","0","0","0"],"issuerClaimMtp":["0","0","0","0","20705360459443886266589173521200199826970601318029396875976898748762842059297","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"issuerClaimClaimsRoot":"4291331108778058814748735252751774985133130667958634779040926608237236193887","issuerClaimRevRoot":"0","issuerClaimRootsRoot":"0","issuerClaimIdenState":"5687720250943511874245715094520098014548846873346473635855112185560372332782","issuerClaimNonRevMtp":["0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"issuerClaimNonRevMtpNoAux":"1","issuerClaimNonRevMtpAuxHi":"0","issuerClaimNonRevMtpAuxHv":"0","issuerClaimNonRevClaimsRoot":"4291331108778058814748735252751774985133130667958634779040926608237236193887","issuerClaimNonRevRevRoot":"0","issuerClaimNonRevRootsRoot":"0","issuerClaimNonRevState":"5687720250943511874245715094520098014548846873346473635855112185560372332782","holderClaim":["262057681346829900854325169563380898778","0","0","0","145645","0","10","0"],"holderClaimMtp":["0","5156125448952672817978035354327403409438120028299513459509442000229340486813","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"holderClaimClaimsRoot":"6115312672613954661243004337092282934879964858669431871060568245694126153014","holderClaimRevRoot":"0","holderClaimRootsRoot":"0","holderClaimIdenState":"21854336316836624648205063833396866062962172591254700720699795557340943331861","gistRoot":"7585076924050100003947544965083413287549935663393626624006699783505166884713","gistMtp":["1243904711429961858774220647610724273798918457991486031567244100767259239747","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"gistMtpAuxHi":"0","gistMtpAuxHv":"0","gistMtpNoAux":"0","crs":"123456789","userGenesisID":"19104853439462320209059061537253618984153217267677512271018416655565783041","profileNonce":"0","claimSubjectProfileNonce":"0"},"expOut":{"userID":"19104853439462320209059061537253618984153217267677512271018416655565783041","sybilID":"20862964869267347971331838950951441214503092363786002222571056178548832852731"}},
        {"desc":"Sybil resistance - Happy flow with Profile - MTP","inputs":{"issuerClaim":["3583233690122716044519380227940806650830","19104853439462320209059061537253618984153217267677512271018416655565783041","10","0","30803922965249841627828060161","0","0","0"],"issuerClaimMtp":["0","0","0","0","20705360459443886266589173521200199826970601318029396875976898748762842059297","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"issuerClaimClaimsRoot":"4291331108778058814748735252751774985133130667958634779040926608237236193887","issuerClaimRevRoot":"0","issuerClaimRootsRoot":"0","issuerClaimIdenState":"5687720250943511874245715094520098014548846873346473635855112185560372332782","issuerClaimNonRevMtp":["0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"issuerClaimNonRevMtpNoAux":"1","issuerClaimNonRevMtpAuxHi":"0","issuerClaimNonRevMtpAuxHv":"0","issuerClaimNonRevClaimsRoot":"4291331108778058814748735252751774985133130667958634779040926608237236193887","issuerClaimNonRevRevRoot":"0","issuerClaimNonRevRootsRoot":"0","issuerClaimNonRevState":"5687720250943511874245715094520098014548846873346473635855112185560372332782","holderClaim":["262057681346829900854325169563380898778","0","0","0","145645","0","10","0"],"holderClaimMtp":["0","5156125448952672817978035354327403409438120028299513459509442000229340486813","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"holderClaimClaimsRoot":"6115312672613954661243004337092282934879964858669431871060568245694126153014","holderClaimRevRoot":"0","holderClaimRootsRoot":"0","holderClaimIdenState":"21854336316836624648205063833396866062962172591254700720699795557340943331861","gistRoot":"7585076924050100003947544965083413287549935663393626624006699783505166884713","gistMtp":["1243904711429961858774220647610724273798918457991486031567244100767259239747","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"gistMtpAuxHi":"0","gistMtpAuxHv":"0","gistMtpNoAux":"0","crs":"123456789","userGenesisID":"19104853439462320209059061537253618984153217267677512271018416655565783041","profileNonce":"10","claimSubjectProfileNonce":"0"},"expOut":{"userID":"25488971158629062708211589022720088934000314791497875911489989686829383681","sybilID":"20862964869267347971331838950951441214503092363786002222571056178548832852731"}},
        {"desc":"Sybil resistance - Happy flow with Profile and Subject - MTP","inputs":{"issuerClaim":["3583233690122716044519380227940806650830","25927604890613122427738740609000473205690959612845229713851180119865819137","10","0","30803922965249841627828060161","0","0","0"],"issuerClaimMtp":["20705360459443886266589173521200199826970601318029396875976898748762842059297","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"issuerClaimClaimsRoot":"10691953870646656921870202361261950204777317981167322384414607337620174939615","issuerClaimRevRoot":"0","issuerClaimRootsRoot":"0","issuerClaimIdenState":"5813937370825903869738107108052298495323998703074760954501648576124762478750","issuerClaimNonRevMtp":["0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"issuerClaimNonRevMtpNoAux":"1","issuerClaimNonRevMtpAuxHi":"0","issuerClaimNonRevMtpAuxHv":"0","issuerClaimNonRevClaimsRoot":"10691953870646656921870202361261950204777317981167322384414607337620174939615","issuerClaimNonRevRevRoot":"0","issuerClaimNonRevRootsRoot":"0","issuerClaimNonRevState":"5813937370825903869738107108052298495323998703074760954501648576124762478750","holderClaim":["262057681346829900854325169563380898778","0","0","0","145645","0","10","0"],"holderClaimMtp":["0","5156125448952672817978035354327403409438120028299513459509442000229340486813","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"holderClaimClaimsRoot":"6115312672613954661243004337092282934879964858669431871060568245694126153014","holderClaimRevRoot":"0","holderClaimRootsRoot":"0","holderClaimIdenState":"21854336316836624648205063833396866062962172591254700720699795557340943331861","gistRoot":"7585076924050100003947544965083413287549935663393626624006699783505166884713","gistMtp":["1243904711429961858774220647610724273798918457991486031567244100767259239747","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"gistMtpAuxHi":"0","gistMtpAuxHv":"0","gistMtpNoAux":"0","crs":"123456789","userGenesisID":"19104853439462320209059061537253618984153217267677512271018416655565783041","profileNonce":"10","claimSubjectProfileNonce":"999"},"expOut":{"userID":"25488971158629062708211589022720088934000314791497875911489989686829383681","sybilID":"18782255017969163123601059576915295547702993380263687303967330844086007845814"}}
    ];

    let circuit;
    this.timeout(300000);

    before(async () => {
        circuit = await wasm_tester(
            path.join(__dirname, "../circuits", "sybilTestMTP.circom"),
            {
                output: path.join(__dirname, "../circuits", "build/sybil"),
                recompile: true,
                reduceConstraints: false,
            },
        );
    });

    tests.forEach(({desc, inputs, expOut}) => {
        it(`auth ${desc}`, async function() {
            const w = await circuit.calculateWitness(inputs, true);
            await circuit.checkConstraints(w);
            await circuit.assertOut(w, expOut);
        });
    });
});



describe("sybilTestSig.circom:", async function() {

    const tests = [
        {"desc":"Sybil resistance - Happy flow - Sig","inputs":{"issuerAuthClaim":["301485908906857522017021291028488077057","0","18843627616807347027405965102907494712213509184168391784663804560181782095821","21769574296201138406688395494914474950554632404504713590270198507141791084591","17476719578317212277","0","0","0"],"issuerAuthClaimMtp":["0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"issuerAuthClaimsRoot":"20705360459443886266589173521200199826970601318029396875976898748762842059297","issuerAuthRevRoot":"0","issuerAuthRootsRoot":"0","issuerAuthClaimNonRevMtp":["0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"issuerAuthClaimNonRevMtpAuxHi":"0","issuerAuthClaimNonRevMtpAuxHv":"0","issuerAuthClaimNonRevMtpNoAux":"1","issuerClaim":["3583233690122716044519380227940806650830","19104853439462320209059061537253618984153217267677512271018416655565783041","10","0","30803922965249841627828060161","0","0","0"],"issuerClaimNonRevClaimsRoot":"20705360459443886266589173521200199826970601318029396875976898748762842059297","issuerClaimNonRevRevRoot":"0","issuerClaimNonRevRootsRoot":"0","issuerClaimNonRevState":"12035569423371053239461605003190702990928630784475264346060457607843543656590","issuerClaimNonRevMtp":["0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"issuerClaimNonRevMtpAuxHi":"0","issuerClaimNonRevMtpAuxHv":"0","issuerClaimNonRevMtpNoAux":"1","issuerClaimSignatureR8x":"17162142911607569076910858896898912994773523663650479471952820383079910930699","issuerClaimSignatureR8y":"15051201438059790575397440686723091111368657477685528398200371392585350837738","issuerClaimSignatureS":"1402447066943664601187351107413084496053664373012210278526422113191686989197","holderClaim":["262057681346829900854325169563380898778","0","0","0","145645","0","10","0"],"holderClaimMtp":["0","5156125448952672817978035354327403409438120028299513459509442000229340486813","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"holderClaimClaimsRoot":"6115312672613954661243004337092282934879964858669431871060568245694126153014","holderClaimRevRoot":"0","holderClaimRootsRoot":"0","holderClaimIdenState":"21854336316836624648205063833396866062962172591254700720699795557340943331861","gistRoot":"7585076924050100003947544965083413287549935663393626624006699783505166884713","gistMtp":["1243904711429961858774220647610724273798918457991486031567244100767259239747","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"gistMtpAuxHi":"0","gistMtpAuxHv":"0","gistMtpNoAux":"0","crs":"123456789","userGenesisID":"19104853439462320209059061537253618984153217267677512271018416655565783041","profileNonce":"0","claimSubjectProfileNonce":""},"expOut":{"userID":"19104853439462320209059061537253618984153217267677512271018416655565783041","sybilID":"20862964869267347971331838950951441214503092363786002222571056178548832852731"}},
        {"desc":"Sybil resistance - Happy flow with Profile - Sig","inputs":{"issuerAuthClaim":["301485908906857522017021291028488077057","0","18843627616807347027405965102907494712213509184168391784663804560181782095821","21769574296201138406688395494914474950554632404504713590270198507141791084591","17476719578317212277","0","0","0"],"issuerAuthClaimMtp":["0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"issuerAuthClaimsRoot":"20705360459443886266589173521200199826970601318029396875976898748762842059297","issuerAuthRevRoot":"0","issuerAuthRootsRoot":"0","issuerAuthClaimNonRevMtp":["0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"issuerAuthClaimNonRevMtpAuxHi":"0","issuerAuthClaimNonRevMtpAuxHv":"0","issuerAuthClaimNonRevMtpNoAux":"1","issuerClaim":["3583233690122716044519380227940806650830","19104853439462320209059061537253618984153217267677512271018416655565783041","10","0","30803922965249841627828060161","0","0","0"],"issuerClaimNonRevClaimsRoot":"20705360459443886266589173521200199826970601318029396875976898748762842059297","issuerClaimNonRevRevRoot":"0","issuerClaimNonRevRootsRoot":"0","issuerClaimNonRevState":"12035569423371053239461605003190702990928630784475264346060457607843543656590","issuerClaimNonRevMtp":["0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"issuerClaimNonRevMtpAuxHi":"0","issuerClaimNonRevMtpAuxHv":"0","issuerClaimNonRevMtpNoAux":"1","issuerClaimSignatureR8x":"17162142911607569076910858896898912994773523663650479471952820383079910930699","issuerClaimSignatureR8y":"15051201438059790575397440686723091111368657477685528398200371392585350837738","issuerClaimSignatureS":"1402447066943664601187351107413084496053664373012210278526422113191686989197","holderClaim":["262057681346829900854325169563380898778","0","0","0","145645","0","10","0"],"holderClaimMtp":["0","5156125448952672817978035354327403409438120028299513459509442000229340486813","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"holderClaimClaimsRoot":"6115312672613954661243004337092282934879964858669431871060568245694126153014","holderClaimRevRoot":"0","holderClaimRootsRoot":"0","holderClaimIdenState":"21854336316836624648205063833396866062962172591254700720699795557340943331861","gistRoot":"7585076924050100003947544965083413287549935663393626624006699783505166884713","gistMtp":["1243904711429961858774220647610724273798918457991486031567244100767259239747","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"gistMtpAuxHi":"0","gistMtpAuxHv":"0","gistMtpNoAux":"0","crs":"123456789","userGenesisID":"19104853439462320209059061537253618984153217267677512271018416655565783041","profileNonce":"10","claimSubjectProfileNonce":""},"expOut":{"userID":"25488971158629062708211589022720088934000314791497875911489989686829383681","sybilID":"20862964869267347971331838950951441214503092363786002222571056178548832852731"}},
        // {"desc":"Sybil resistance - Happy flow with Profile and Subject - Sig","inputs":{"issuerAuthClaim":["301485908906857522017021291028488077057","0","18843627616807347027405965102907494712213509184168391784663804560181782095821","21769574296201138406688395494914474950554632404504713590270198507141791084591","17476719578317212277","0","0","0"],"issuerAuthClaimMtp":["0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"issuerAuthClaimsRoot":"20705360459443886266589173521200199826970601318029396875976898748762842059297","issuerAuthRevRoot":"0","issuerAuthRootsRoot":"0","issuerAuthClaimNonRevMtp":["0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"issuerAuthClaimNonRevMtpAuxHi":"0","issuerAuthClaimNonRevMtpAuxHv":"0","issuerAuthClaimNonRevMtpNoAux":"1","issuerClaim":["3583233690122716044519380227940806650830","25927604890613122427738740609000473205690959612845229713851180119865819137","10","0","30803922965249841627828060161","0","0","0"],"issuerClaimNonRevClaimsRoot":"20705360459443886266589173521200199826970601318029396875976898748762842059297","issuerClaimNonRevRevRoot":"0","issuerClaimNonRevRootsRoot":"0","issuerClaimNonRevState":"12035569423371053239461605003190702990928630784475264346060457607843543656590","issuerClaimNonRevMtp":["0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"issuerClaimNonRevMtpAuxHi":"0","issuerClaimNonRevMtpAuxHv":"0","issuerClaimNonRevMtpNoAux":"1","issuerClaimSignatureR8x":"11941579372044885188520740009446174069551746826855327927409455116657910704853","issuerClaimSignatureR8y":"9828463332728224319923427374551894305184849348357329740817148263264920035556","issuerClaimSignatureS":"1880064774322809882978432324849428865533268672015882505746507082351147100676","holderClaim":["262057681346829900854325169563380898778","0","0","0","145645","0","10","0"],"holderClaimMtp":["0","5156125448952672817978035354327403409438120028299513459509442000229340486813","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"holderClaimClaimsRoot":"6115312672613954661243004337092282934879964858669431871060568245694126153014","holderClaimRevRoot":"0","holderClaimRootsRoot":"0","holderClaimIdenState":"21854336316836624648205063833396866062962172591254700720699795557340943331861","gistRoot":"7585076924050100003947544965083413287549935663393626624006699783505166884713","gistMtp":["1243904711429961858774220647610724273798918457991486031567244100767259239747","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"gistMtpAuxHi":"0","gistMtpAuxHv":"0","gistMtpNoAux":"0","crs":"123456789","userGenesisID":"19104853439462320209059061537253618984153217267677512271018416655565783041","profileNonce":"10","claimSubjectProfileNonce":""},"expOut":{"userID":"25488971158629062708211589022720088934000314791497875911489989686829383681","sybilID":"18782255017969163123601059576915295547702993380263687303967330844086007845814"}}
    ];
    let circuit;
    this.timeout(300000);

    before(async () => {
        circuit = await wasm_tester(
            path.join(__dirname, "../circuits", "sybilTestSig.circom"),
            {
                output: path.join(__dirname, "../circuits", "build/sybilSig"),
                recompile: true,
                reduceConstraints: false,
            },
        );
    });

    tests.forEach(({desc, inputs, expOut}) => {
        it(`auth ${desc}`, async function() {
            const w = await circuit.calculateWitness(inputs, true);
            await circuit.checkConstraints(w);
            await circuit.assertOut(w, expOut);
        });
    });
});