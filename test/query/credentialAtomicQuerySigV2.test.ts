import {describe} from "mocha";

const path = require("path");
const wasmTester = require("circom_tester").wasm;

export {};

describe("Test credentialAtomicQuerySigV2.circom", function() {

  this.timeout(600000);

  let circuit;

  before(async () => {
    circuit = await wasmTester(
      path.join(__dirname, "../circuits/query", "credentialAtomicQuerySigV2Test.circom"),
      {
        output: path.join(__dirname, "circuits", "build"),
        recompile: true,
        reduceConstraints: false,
      },
    );

  });

  after(async () => {
    circuit.release()
  })

  it("Genesis state: claim issued on userID credentialAtomicQuerySigV2Test", async () => {
    // inputs MUST be generated by GO-CIRCUITS library https://github.com/iden3/go-circuits (using corresponding test)
    const inputs = {
      userAuthClaim: ["304427537360709784173770334266246861770", "0", "4720763745722683616702324599137259461509439547324750011830105416383780791263", "4844030361230692908091131578688419341633213823133966379083981236400104720538", "16547485850637761685", "0", "0", "0"],
      userAuthClaimMtp: ["20414019172782894011037632981443152254877376319211511372476935057674492820400", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
      userAuthClaimNonRevMtp: ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
      userAuthClaimNonRevMtpAuxHi: "15930428023331155902",
      userAuthClaimNonRevMtpAuxHv: "0",
      userAuthClaimNonRevMtpNoAux: "0",
      userClaimsTreeRoot: "4007604929687835641683076505379836604617083797856462347907321779859723516350",
      userGenesisID: "20920305170169595198233610955511031459141100274346276665183631177096036352",
      userRevTreeRoot: "9572161194792737168173461511232528826921561251689921703982232129896045083154",
      userRootsTreeRoot: "0",
      userState: "33089667707925197893198548712099817576974852353032974911703174608178861050",

      challenge: "1",
      challengeSignatureR8x: "3318605682427930847043923964996627571509054270532204838981931388121839601904",
      challengeSignatureR8y: "6885828942356963641443098413925008636428756893590364657052219244852107012379",
      challengeSignatureS: "1239257276045842588253148642684748186882810960469506371777432113478495615573",

      globalSmtMtp: ["6423726522886114660660988997089256319591919429389541858046392552123009603801", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
      globalSmtMtpAuxHi: "0",
      globalSmtMtpAuxHv: "0",
      globalSmtMtpNoAux: "0",
      globalSmtRoot: "19638862148152134254552118025664465770449697412399425765337173640617797627777",

      claimSubjectProfileNonce: "0",
      issuerClaim:  ["3583233690122716044519380227940806650830", "20920305170169595198233610955511031459141100274346276665183631177096036352", "10", "0", "30803922965249841627828060161", "0", "0", "0"],
      issuerClaimNonRevClaimsTreeRoot: "9039420820783947225129721782217789545748472394427426963935402963755305583703",
      issuerClaimNonRevRevTreeRoot: "0",
      issuerClaimNonRevRootsTreeRoot: "0",
      issuerClaimNonRevState: "13502509003951168747865850207840147567848114437663919718666503371668245440139",
      issuerClaimNonRevMtp: ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
      issuerClaimNonRevMtpAuxHi: "0",
      issuerClaimNonRevMtpAuxHv: "0",
      issuerClaimNonRevMtpNoAux: "1",
      claimSchema: "180410020913331409885634153623124536270",
      issuerID: "26599707002460144379092755370384635496563807452878989192352627271768342528",
      operator: 1,
      slotIndex: 2,
      timestamp: "1642074362",
      value: ["10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
      issuerClaimSignatureR8x: "19151655656571068723188718866820691386512454028254006139907638885547326917694",
      issuerClaimSignatureR8y: "17463616698941210521990412259215791048145070157919873499989757246656774123070",
      issuerClaimSignatureS: "1268035173625987886471230795279546403676700496822588311134000495794122363162",

      issuerAuthClaim: ["304427537360709784173770334266246861770", "0", "9582165609074695838007712438814613121302719752874385708394134542816240804696", "18271435592817415588213874506882839610978320325722319742324814767882756910515", "11203087622270641253", "0", "0", "0"],
      // tslint:disable-next-line:max-line-length
      issuerAuthClaimMtp: ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
      issuerAuthClaimNonRevMtp: ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
      issuerAuthClaimNonRevMtpAuxHi: "0",
      issuerAuthClaimNonRevMtpAuxHv: "0",
      issuerAuthClaimNonRevMtpNoAux: "1",
      issuerAuthClaimsTreeRoot: "18337129644116656308842422695567930755039142442806278977230099338026575870840",
      issuerAuthRevTreeRoot: "0",
      issuerAuthRootsTreeRoot: "0",
      nonce: "0",
    }

    const expOut = {
      globalSmtRoot: "19638862148152134254552118025664465770449697412399425765337173640617797627777",
      // tslint:disable-next-line:object-literal-sort-keys
      userID: "20920305170169595198233610955511031459141100274346276665183631177096036352",
      issuerID: "26599707002460144379092755370384635496563807452878989192352627271768342528",
      issuerAuthState: "6317996369756476782464660619835940615734517981889733696047139451453239145426",
      issuerClaimNonRevState: "13502509003951168747865850207840147567848114437663919718666503371668245440139",
      challenge: "1",
      claimSchema: "180410020913331409885634153623124536270",
      slotIndex: "2",
      operator: "1",
      value: ["10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
      timestamp: "1642074362",
    }
    const w = await circuit.calculateWitness(inputs, true);
    await circuit.checkConstraints(w);
    await circuit.assertOut(w, expOut);
  });

  // it("NOT Genesis state: credentialAtomicQuerySigV2Test", async () => {
  //   // inputs MUST be generated by GO-CIRCUITS library https://github.com/iden3/go-circuits (using corresponding test)
  //   const inputs = {
  //     userAuthClaim: ["304427537360709784173770334266246861770", "0", "17640206035128972995519606214765283372613874593503528180869261482403155458945", "20634138280259599560273310290025659992320584624461316485434108770067472477956", "15930428023331155902", "0", "0", "0"],
  //     userAuthClaimMtp: ["0", "0", "1243904711429961858774220647610724273798918457991486031567244100767259239747", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
  //     userAuthClaimNonRevMtp: ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
  //     userAuthClaimNonRevMtpAuxHi: "0",
  //     userAuthClaimNonRevMtpAuxHv: "0",
  //     userAuthClaimNonRevMtpNoAux: "1",
  //     userClaimsTreeRoot: "3325296375493109531775738970103865437471502880293182874312109748701010548081",
  //     userState: "21556156816336611928260850205358242317673071374695788694657164635542250181506",
  //     // tslint:disable-next-line:object-literal-sort-keys
  //     userRevTreeRoot: "0",
  //     userRootsTreeRoot: "0",
  //     userGenesisID: "379949150130214723420589610911161895495647789006649785264738141299135414272",
  //     challenge: "1",
  //     challengeSignatureR8x: "8553678144208642175027223770335048072652078621216414881653012537434846327449",
  //     challengeSignatureR8y: "5507837342589329113352496188906367161790372084365285966741761856353367255709",
  //     challengeSignatureS: "2093461910575977345603199789919760192811763972089699387324401771367839603655",
  //     issuerClaim: ["3583233690122716044519380227940806650830", "379949150130214723420589610911161895495647789006649785264738141299135414272", "10", "0", "30803922965249841627828060161", "0", "0", "0"],
  //     issuerClaimNonRevClaimsTreeRoot: "3077200351284676204723270374054827783313480677490603169533924119235084704890",
  //     issuerClaimNonRevRevTreeRoot: "0",
  //     issuerClaimNonRevRootsTreeRoot: "0",
  //     issuerClaimNonRevState: "18605292738057394742004097311192572049290380262377486632479765119429313092475",
  //     issuerClaimNonRevMtp: ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
  //     issuerClaimNonRevMtpAuxHi: "0",
  //     issuerClaimNonRevMtpAuxHv: "0",
  //     issuerClaimNonRevMtpNoAux: "1",
  //     claimSchema: "180410020913331409885634153623124536270",
  //     issuerID: "26599707002460144379092755370384635496563807452878989192352627271768342528",
  //     operator: 1,
  //     slotIndex: 2,
  //     timestamp: "1642074362",
  //     value: ["10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
  //     issuerClaimSignatureR8x: "18625305647089498634672127449050652473073470525382360069529718632627474482386",
  //     issuerClaimSignatureR8y: "14539700345423181413201048131770723125531044953576671601029329833956725811279",
  //     issuerClaimSignatureS: "772934080142423067561028786350670095248312416624185973552603152377549415467",
  //     issuerAuthClaim: ["304427537360709784173770334266246861770", "0", "9582165609074695838007712438814613121302719752874385708394134542816240804696", "18271435592817415588213874506882839610978320325722319742324814767882756910515", "11203087622270641253", "0", "0", "0"],
  //     // tslint:disable-next-line:max-line-length
  //     issuerAuthClaimMtp: ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
  //     issuerAuthClaimNonRevMtp: ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
  //     issuerAuthClaimNonRevMtpAuxHi: "0",
  //     issuerAuthClaimNonRevMtpAuxHv: "0",
  //     issuerAuthClaimNonRevMtpNoAux: "1",
  //     issuerAuthClaimsTreeRoot: "18337129644116656308842422695567930755039142442806278977230099338026575870840",
  //     issuerAuthRevTreeRoot: "0",
  //     issuerAuthRootsTreeRoot: "0",
  //     nonce: "123456789",
  //     globalSmtMtp: ["0", "2740674427662457332835454792145677734479634481325332115749498841888350110548", "19991091798052235227442886829713443191817461077589875647331508266325270343516", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
  //     globalSmtRoot: "2527369248886058159298190241228260543545233125629989424050431010562778308348",
  //     globalSmtMtpAuxHi: "0",
  //     globalSmtMtpAuxHv: "0",
  //     globalSmtMtpNoAux: "0",
  //   }
  //
  //   const expOut = {
  //     globalSmtRoot: "2527369248886058159298190241228260543545233125629989424050431010562778308348",
  //     // tslint:disable-next-line:object-literal-sort-keys
  //     userID: "18968116468485570865854580659399634645721780236139322781445564960051610308120",
  //     issuerID: "26599707002460144379092755370384635496563807452878989192352627271768342528",
  //     issuerAuthState: "6317996369756476782464660619835940615734517981889733696047139451453239145426",
  //     issuerClaimNonRevState: "18605292738057394742004097311192572049290380262377486632479765119429313092475",
  //     challenge: "1",
  //     claimSchema: "180410020913331409885634153623124536270",
  //     slotIndex: "2",
  //     operator: "1",
  //     value: ["10", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
  //     timestamp: "1642074362",
  //   }
  //   const w = await circuit.calculateWitness(inputs, true);
  //   await circuit.assertOut(w, expOut);
  // });
});
