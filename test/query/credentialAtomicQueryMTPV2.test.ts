import {describe} from "mocha";

const path = require("path");
const wasmTester = require("circom_tester").wasm;

// export {};

describe("Test credentialAtomicQueryMTPV2.circom", function() {

    this.timeout(600000);

    let circuit;

    before(async () => {
        circuit = await wasmTester(
            path.join(__dirname, "../../circuits/offchain", "credentialAtomicQueryMTPV2.circom"),
            {
                output: path.join(__dirname, "circuits", "build"),
                recompile: true,
                reduceConstraints: false,
            },
        );

    });

    after(async () => {
        circuit.release()
    })

    const tests = [
        {desc: "User = Subject. Claim issued on UserID", inputs: {userGenesisID: "24357338057394103910029868244681596615276666879950910837900400354886746113", nonce: "0", claimSubjectProfileNonce: "0", issuerID: "21443782015371791400876357388364171246290737482854988499085152504070668289", issuerClaim: ["14472269431592746875347367665757389417422", "24357338057394103910029868244681596615276666879950910837900400354886746113", "17568057213828477233507447080689055308823020388972334380526849356111335110900", "0", "30803922965249841627828060170", "0", "0", "0"], issuerClaimMtp: ["0", "15199473115813230313374914807082214428877572421391930598963399134225175436873", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], issuerClaimClaimsTreeRoot: "9913398981440534368866969274646229131607129348045277507274040428876961317466", issuerClaimRevTreeRoot: "0", issuerClaimRootsTreeRoot: "0", issuerClaimIdenState: "11533165718615791836708290958368974159388320600101649875930644636707449431110", issuerClaimNonRevClaimsTreeRoot: "9913398981440534368866969274646229131607129348045277507274040428876961317466", issuerClaimNonRevRevTreeRoot: "0", issuerClaimNonRevRootsTreeRoot: "0", issuerClaimNonRevState: "11533165718615791836708290958368974159388320600101649875930644636707449431110", issuerClaimNonRevMtp: ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], issuerClaimNonRevMtpAuxHi: "0", issuerClaimNonRevMtpAuxHv: "0", issuerClaimNonRevMtpNoAux: "1", claimSchema: "180410020913331409885634153623124536270", claimPathNotExists: "0", claimPathMtp: ["5559250731000753554753485016695600829384855452867544273344893815961938985436", "20222899544143787877985297439625828822272100269106711904511119118819809140477", "14730426618666280941604039095550905490156541514901979358549599762282042588641", "20497288520738821800886677250569208588689763166335933087499619993954968899866", "3295720551404287572425718873751040314503774617833462052445584373469655789999", "796356776410152646380783209242693344675665178494017735650545708722024766291", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], claimPathMtpNoAux: "0", claimPathMtpAuxHi: "0", claimPathMtpAuxHv: "0", claimPathKey: "8566939875427719562376598811066985304309117528846759529734201066483458512800", claimPathValue: "1420070400000000000", operator: 1, slotIndex: 0, timestamp: "1642074362", value: ["1420070400000000000", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"]}, expOut: {userID: "24357338057394103910029868244681596615276666879950910837900400354886746113", issuerID: "21443782015371791400876357388364171246290737482854988499085152504070668289", issuerClaimIdenState: "11533165718615791836708290958368974159388320600101649875930644636707449431110", issuerClaimNonRevState: "11533165718615791836708290958368974159388320600101649875930644636707449431110", claimSchema: "180410020913331409885634153623124536270", slotIndex: "0", operator: 1, value: ["1420070400000000000", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], timestamp: "1642074362", merklized: "1", claimPathKey: "8566939875427719562376598811066985304309117528846759529734201066483458512800", claimPathNotExists: "0"}},
    ];

    tests.forEach(({desc, inputs, expOut}) => {
        it(`${desc}`, async function() {
            const w = await circuit.calculateWitness(inputs, true);
            await circuit.assertOut(w, expOut);
            await circuit.checkConstraints(w);
        });
    });

});
